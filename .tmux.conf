#set-option -g default-shell /bin/bash
#dealing with version incompatibility, tmux -d -s hold has been added for the gwdg, because tmux setenv can't run without a first window, which can't be done if setenv is in the tmux.conf.
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

#running bash shell by default
set-option -g default-command bash
set -g default-terminal "xterm-256color"

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# vim like pane moves
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

unbind )
unbind (
bind ) switch-client -n\; source ~/.tmux.conf
bind ( switch-client -p\; source ~/.tmux.conf

bind r source ~/.tmux.conf

#if-shell -b '[ tmux display-message "#S" ]'i
#if-shell -b '[ "$(tmux display-message "#S")" = smaug ]' " \
#  bind b send-keys -t ! "echo $(pwd) | sed 's=\/data\/users\/jeremy\/simulation\/=\/home\/jeremy\/mnt\/smaug\/=g' > /data/users/jeremy/simulation/syncsim/chd.tmp" Enter\; send-keys 'last_dir=$(cat ~/mnt/smaug/syncsim/chd.tmp); cd "$last_dir"' ENTER"

#if-shell -b '[$(tmux display-message "#S")" = smaug ]' " \
#  bind b send-keys -t ! 'echo $(pwd) | sed 's=\/data\/users\/jeremy\/simulation\/=\/home\/jeremy\/mnt\/smaug\/=g' > /data/users/jeremy/simulation/syncsim/chd.tmp' Enter\; send-keys 'last_dir=$(cat ~/mnt/smaug/syncsim/chd.tmp); cd "$last_dir"' ENTER"
unbind-key b
%if "#{==:#S,smaug}"
#setenv MILOLO yosh
bind b send-keys -t ! "echo $(pwd) | sed 's=/data/users/jeremy/simulation=/home/jeremy/mnt/smaug=g' > /data/users/jeremy/simulation/syncsim/chd.tmp" Enter\; send-keys 'last_dir=$(cat ~/mnt/smaug/syncsim/chd.tmp); cd "$last_dir"' ENTER
%elif "#{==:#S,gwdg}"
bind b send-keys -t ! "echo $(pwd) | sed 's=/usr/users/jlapier/simulation=/home/jeremy/mnt/gwdg=g' > /usr/users/jlapier/simulation/syncsim/chd.tmp" Enter\; send-keys 'last_dir=$(cat ~/mnt/gwdg/syncsim/chd.tmp); cd "$last_dir"' ENTER
%endif

#bind b send-keys -t ! "echo $(pwd) | sed 's=\/data\/users\/jeremy\/simulation\/=\/home\/jeremy\/mnt\/smaug\/=g' > /data/users/jeremy/simulation/syncsim/chd.tmp || echo $(pwd) | sed 's=\/usr\/users\/jlapier\/simulation\/=\/home\/jeremy\/mnt\/gwdg\/=g' > /usr/users/jlapier/simulation/syncsim/chd.tmp" Enter\; send-keys 'last_dir=$(cat ~/mnt/smaug/syncsim/chd.tmp); cd "$last_dir"' ENTER

set -g pane-border-format "#{@mytitle}"
#set-window-option -g automatic-rename off
#set-option -g allow-rename off
set -g pane-border-status bottom
#set -g pane-border-status on

# vim like resize pane, press prefix + h/j/k/l, and then just Alt h/j/k/l
#bind -r j resize-pane -D 2
#bind -r k resize-pane -U 2
#bind -r h resize-pane -L 2
#bind -r l resize-pane -R 2

# Enable mouse control (clickable windows, panes, resizable panes)
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' " \
  bind m set -g mouse on; \
  bind M set -g mouse off"


if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
  bind m setw -g mode-mouse on \; set -g mouse-select-window on \; set -g mouse-select-pane on \; set -g mouse-resize-pane on \; bind M setw -g mode-mouse off"

# vim like copy paste (first C-b [, then v, then y, then C-b ])
setw -g mode-keys vi
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy r rectangle-toggle; \
  bind-key -t vi-copy y copy-pipe 'xclip -selection clipboard -in'"

#if clipboard not supported: bind-key -t vi-copy 'y' copy-selection

if-shell -b '[ "$(echo "$TMUX_VERSION > 2.5" | bc)" = 1 ]' " \
  bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

# Disable entering y for quiting window
bind-key & kill-window
