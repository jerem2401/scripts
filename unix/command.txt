tail -n +7 colvar_pull.txt | awk 'NR == 1 || $4 < min {line = $0; min = $4}END{print line}' # find min in column 4 (+skip first 6 lines)

#awk
awk '(NR>1) && ( ($7 > 0.190) && ($8 > -0.400) )' colvar_pull_cross.txt > test.txt #take all lines (NR>1), which have values in 7th column greater thatn 0.190 and 8th > -0.4
awk -v max=0 'FNR > 5 {if($6>max){max=$6}}END{print max}' E_1.000/colvar1.000_0.3.txt #get max of col 6 (skipping first 5 lines)

#sed
sed 413's/\S\+/1.00/10' temp_phe.pdb, substitute filed in line 413 and column 10 by '1.00'

#pymol
pair_fit /c7eqf///ALA`1/CB, /c7axf///ALA`1/CB, /c7eqf///ALA`1/CA, /c7axf///ALA`1/CA, /c7eqf///ALA`1/N, /c7axf///ALA`1/N, /c7eqf///ALA`1/C, /c7axf///ALA`1/C #aligning specific atoms
for i in range(1001, 20001, 1000): cmd.extra_fit("conf"+str(i)+"_fax", "conf20000_fax") #align several struct pymol

#Compiling Gromacs on Smaug:
cmake .. -DCMAKE_INSTALL_PREFIX=/data/shared/opt/gromacs/2018.6_plumed/ -DGMX_SIMD=AVX2_256 -DGMX_BUILD_OWN_FFTW=ON
make -j 4
make install

#backup
rsync -avzHPih --delete --exclude=/localdisk/mnt/ --exclude=/localdisk/lost+found --link-dest=/run/media/jeremy/Backup/18-07-2019_1640/ /localdisk /run/media/jeremy/Backup/$(date '+%d-%m-%Y_%H%M') > log2.log

#create pdb template for plumed RMSD
for i in $(seq 0 1000 20000); do if [ "$i" -ne 0 ]; then gmx trjconv -s md.tpr -f traj_comp.xtc -dump "$i" -o "$i".pdb; fi; done
for i in conf*_fax.gro; do gmx editconf -f "$i" -o "${i:0:-3}.pdb";done
for i in conf*_fax.pdb; do sed -i '1,4d;6,8d;12d;14d;16,18d;22d;24,27d' "$i";done
for i in conf*_fax.pdb; do sed -i "s/ENDMDL/END/g;s/0.00/1.00/g;" "$i";done

#git
git remote set-url origin git@github.com:username/repo.git #replacing SSHS connection to SSH (no need to enter username and psw everytime)
git clone SSHlink
git config --global diff.tool vimdiff
git config --global merge.tool vimdiff
git config --global alias.d difftool
git status
git add file #adding files to stage
git commit -m "message" #saving snapshot
git log #see history
git log --oneline --decorate #one line history without dates and emails
git log --oneline --decorate --graph --all #see history tree
git push -u origin master #merge branches
git fetch #download new data from remote repo, gives fresh view that happened remotly, safer than pull
git pull origin master #download AND integrates into current working cpoy files, conflict can arrise
git diff HEAD #difference before commiting (stagged ?)
git diff master origin/master #difference after commiting

BRANCHING
git pull #pull changes that can have been made on the master before creating new branch
git branch branch_name #creating new branch
git config branch.branch_name.description "description" #adding description to branch
git config branch.<branch name>.description #displaying branch description
git checkout branch_name #change branch, "-b" create and change branch
git push origin [name_of_your_new_branch]

#SLURM
srun -N 1 -n 4 hostname && echo "Program finished with exit code $? at: `date`" #testing interactive job
sacct -j JOBID (see also --format option or -l)
sacct -u jlapier (list my jobs)

sprio -w
sprio -j 8374 -l
sshare

#Unison
unison -fastcheck true /localdisk/mnt/smaug/syncsim /localdisk/mnt/gwdg/simulation/syncsim/

#checksum comparaison:
echo "2b9f088b2022edb474915d9f69a803d6449d5fdb4c303041f60ac4aefcc208bb Anaconda3-2020.02-Linux-x86_64.sh" | sha256sum --check

#nextcloud
https://cloud.hiz-saarland.de/remote.php/webdav/

#check graphic cards
#sudo lshw -c video

#tlp battery
tlp-stat -s
